{"version":3,"file":"content.js","mappings":"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","sources":["webpack://webtranslator/./src/content/utils.js","webpack://webtranslator/./src/content/content.js"],"sourcesContent":["\"use strict\";\n\nexport function isVisible(element) {\n  const rect = element.getBoundingClientRect();\n  return rect.top <= window.innerHeight && rect.left <= window.innerWidth;\n}\n\nexport function hasTextNode(element) {\n  const childNodes = element.childNodes;\n  if (childNodes.length === 0) {\n    return false;\n  }\n  return (\n    childNodes[0].nodeType === Node.TEXT_NODE &&\n    childNodes[0].nodeValue.trim() !== \"\"\n  );\n}\n\nexport function hasInlineElement(element) {\n  const children = element.children;\n  if (!children || children.length === 0) {\n    return false;\n  }\n  for (const child of children) {\n    const display = getComputedStyle(child).display;\n    if (display === \"inline\" || display === \"inline-block\") {\n      return true;\n    }\n  }\n}\n\nexport function scrollDidStop(callback, refresh = 200) {\n  let isScrolling;\n  window.addEventListener(\n    \"scroll\",\n    function (event) {\n      window.clearTimeout(isScrolling);\n      isScrolling = setTimeout(callback, refresh);\n    },\n    {\n      once: false,\n      passive: true,\n      capture: true,\n    }\n  );\n}\n\nexport function once(fn, context) {\n  let result;\n  return function () {\n    if (fn) {\n      result = fn.apply(context || this, arguments);\n      fn = undefined;\n    }\n    return result;\n  };\n}\n\nexport function escapeHTML(text) {\n  const div = document.createElement(\"div\");\n  div.textContent = text;\n  return div.innerHTML;\n}\n\nexport function isTouchDevice() {\n  return (\n    \"ontouchstart\" in window ||\n    navigator.maxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0\n  );\n}\n","\"use strict\";\n\nimport {\n  isVisible,\n  hasTextNode,\n  hasInlineElement,\n  once,\n  scrollDidStop,\n  isTouchDevice,\n} from \"./utils\";\n\nclass App {\n  #uid = 1;\n  #sourceLanguage = undefined;\n  #targetLanguage = undefined;\n  #originalTexts = {};\n  #translatedTexts = {};\n\n  #toastProgress = undefined;\n  #toastError = undefined;\n\n  #isProcessing = false;\n  #shouldProcessAfterScrolling = false;\n  #isShowingOriginal = false;\n\n  constructor() {\n    this.#init();\n  }\n\n  #init() {\n    this.#restoreState();\n\n    const popover = document.getElementById(\"translate-popover\");\n    if (popover) {\n      popover.remove();\n    }\n    const tooltip = document.getElementById(\"translate-button\");\n    if (tooltip) {\n      tooltip.remove();\n    }\n\n    this.#toastProgress = this.#createToastProgress();\n    this.#toastError = this.#createToastError();\n\n    this.#setupListeners();\n    if (isTouchDevice()) {\n      this.#observeTextSelection();\n    }\n  }\n\n  #restoreState() {\n    const id = \"__wtdl-global-data\";\n    const global = document.getElementById(id);\n    if (global) {\n      if (global.dataset.wtdlOriginalTexts) {\n        try {\n          this.#originalTexts = JSON.parse(global.dataset.wtdlOriginalTexts);\n        } catch (error) {}\n      }\n      return;\n    }\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<div id=\"${id}\" style=\"display: none;\"></div>`\n    );\n  }\n\n  #saveState() {\n    const global = document.getElementById(\"__wtdl-global-data\");\n    if (global) {\n      global.dataset.wtdlOriginalTexts = JSON.stringify(this.#originalTexts);\n    }\n  }\n\n  #setupListeners() {\n    browser.runtime.onMessage.addListener(\n      async (request, sender, sendResponse) => {\n        if (!request) {\n          return;\n        }\n        switch (request.method) {\n          case \"translate\": {\n            this.#shouldProcessAfterScrolling = true;\n\n            await this.#translatePage(request);\n\n            once(\n              scrollDidStop(async () => {\n                if (this.#shouldProcessAfterScrolling) {\n                  await this.#translatePage({\n                    sourceLanguage: this.#sourceLanguage,\n                    targetLanguage: this.#targetLanguage,\n                  });\n                }\n              }, 500)\n            )();\n\n            sendResponse();\n            break;\n          }\n          case \"getContentState\": {\n            if (this.#isProcessing) {\n              sendResponse({ result: { isProcessing: this.#isProcessing } });\n            } else if (Object.keys(this.#originalTexts).length > 0) {\n              sendResponse({\n                result: {\n                  sourceLanguage: this.#sourceLanguage,\n                  targetLanguage: this.#targetLanguage,\n                  isShowingOriginal: this.#isShowingOriginal,\n                },\n              });\n            } else {\n              sendResponse(undefined);\n            }\n            break;\n          }\n          case \"showOriginal\": {\n            this.#shouldProcessAfterScrolling = false;\n            this.#isShowingOriginal = true;\n\n            const elements = document.querySelectorAll(\n              '[data-wtdl-translated=\"true\"]'\n            );\n            for (const element of elements) {\n              const uid = element.dataset.wtdlUid;\n              const originalText = this.#originalTexts[uid];\n              if (originalText === undefined) {\n                continue;\n              }\n              element.innerHTML = originalText;\n              element.dataset.wtdlTranslated = \"false\";\n            }\n            sendResponse();\n            break;\n          }\n          case \"startTranslateSelection\": {\n            const selection = window.getSelection();\n            const textRange = selection.getRangeAt(0);\n            const selectionRect = textRange.getBoundingClientRect();\n\n            const x = selectionRect.left + window.scrollX;\n            const y = selectionRect.bottom + window.scrollY + 30;\n\n            const position = this.#getExistingPopoverPosition();\n            const popover = this.#createPopover(position || { x, y });\n            popover.setAttribute(\"loading\", true);\n\n            sendResponse();\n            break;\n          }\n          case \"finishTranslateSelection\": {\n            const result = request.result;\n            const popover = document.getElementById(\"translate-popover\");\n            if (popover) {\n              if (result.result && result.result.texts) {\n                const text = result.result.texts.map((t) => t.text).join(\"\\n\");\n                popover.setAttribute(\"result\", `${text}`);\n                popover.setAttribute(\"lang\", `${request.targetLanguage || \"\"}`);\n              } else {\n                if (result.error) {\n                  const message = browser.i18n.getMessage(\n                    \"error_message_generic_error\"\n                  );\n                  popover.setAttribute(\"error\", message);\n                } else {\n                  const message = browser.i18n.getMessage(\n                    \"error_message_generic_error\"\n                  );\n                  popover.setAttribute(\"error\", message);\n                }\n              }\n              popover.setAttribute(\"loading\", false);\n            }\n            sendResponse();\n            break;\n          }\n          case \"getSelection\": {\n            const selection = window.getSelection();\n            sendResponse({\n              result: selection ? selection.toString() : undefined,\n            });\n            break;\n          }\n          default: {\n            sendResponse();\n            break;\n          }\n        }\n      }\n    );\n  }\n\n  #observeTextSelection() {\n    document.addEventListener(\"pointerup\", async (event) => {\n      event.preventDefault();\n\n      const selection = window.getSelection();\n      const selectionText = selection ? selection.toString().trim() : \"\";\n      if (!selectionText && !selection.rangeCount) {\n        this.#removeTooltip();\n        return;\n      }\n\n      setTimeout(() => {\n        const textRange = selection.getRangeAt(0).cloneRange();\n        textRange.collapse(selection.anchorOffset > selection.focusOffset);\n        const selectionRect = textRange.getBoundingClientRect();\n\n        const x = selectionRect.right + window.scrollX - 20;\n        const y = selectionRect.bottom + window.scrollY + 40;\n\n        {\n          const selection = window.getSelection();\n          if (!selection || !selection.toString().trim()) {\n            this.#removeTooltip();\n            return;\n          }\n        }\n\n        const tooltip = this.#createTooltip({ x, y });\n        tooltip.addEventListener(\"tooltipClick\", (event) => {\n          event.preventDefault();\n          event.stopPropagation();\n\n          if (selectionText) {\n            const request = {\n              method: \"translateSelection\",\n              selectionText,\n            };\n            browser.runtime.sendMessage(request);\n          }\n          tooltip.remove();\n\n          return false;\n        });\n      }, 100);\n    });\n  }\n\n  #createTooltip(position) {\n    const id = \"translate-button\";\n    {\n      const tooltip = document.getElementById(id);\n      if (tooltip) {\n        tooltip.remove();\n      }\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<translate-button id=\"${id}\"></translate-button>`\n    );\n    const tooltip = document.getElementById(id);\n    tooltip.setAttribute(\"position\", JSON.stringify(position));\n\n    document.addEventListener(\n      \"touchstart\",\n      (event) => {\n        if (event.target.closest(id)) {\n          return;\n        }\n        tooltip.remove();\n      },\n      { once: true }\n    );\n\n    return tooltip;\n  }\n\n  #removeTooltip() {\n    const id = \"translate-button\";\n    const tooltip = document.getElementById(id);\n    if (tooltip) {\n      tooltip.remove();\n    }\n  }\n\n  #createToastProgress() {\n    const id = \"toast-progress\";\n    const toast = document.getElementById(id);\n    if (toast) {\n      toast.remove();\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<toast-progress id=\"${id}\"></toast-progress>`\n    );\n    return document.getElementById(id);\n  }\n\n  #createToastError() {\n    const id = \"toast-error\";\n    const toast = document.getElementById(id);\n    if (toast) {\n      toast.remove();\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<toast-error id=\"${id}\"></toast-error>`\n    );\n    return document.getElementById(id);\n  }\n\n  #createPopover(position) {\n    const id = \"translate-popover\";\n    {\n      const popover = document.getElementById(id);\n      if (popover) {\n        popover.remove();\n      }\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<translate-popover id=\"${id}\"></translate-popover>`\n    );\n    const popover = document.getElementById(id);\n    popover.setAttribute(\"position\", JSON.stringify(position));\n\n    const onClick = (event) => {\n      if (event.target.closest(id)) {\n        return;\n      }\n      popover.remove();\n      document.removeEventListener(\"click\", onClick);\n    };\n\n    document.addEventListener(\"click\", onClick);\n    popover.addEventListener(\"close\", async () => {\n      popover.remove();\n      document.removeEventListener(\"click\", onClick);\n    });\n    popover.addEventListener(\"change\", async (event) => {\n      if (!event || !event.detail) {\n        return;\n      }\n      await browser.storage.local.set({\n        selectedSourceLanguage: undefined,\n        selectedTargetLanguage: event.detail.selectedTargetLanguage,\n      });\n\n      const request = {\n        method: \"translateSelection\",\n        selectionText: undefined,\n      };\n      browser.runtime.sendMessage(request);\n    });\n\n    return popover;\n  }\n\n  #getExistingPopoverPosition() {\n    const id = \"translate-popover\";\n    const popover = document.getElementById(id);\n    if (popover) {\n      return popover.getPosition();\n    }\n    return undefined;\n  }\n\n  async #translatePage(request) {\n    const translatedElements = document.querySelectorAll(\n      '[data-wtdl-translated=\"false\"]'\n    );\n    if (this.#targetLanguage === request.targetLanguage) {\n      // Restore translated texts\n      for (const element of translatedElements) {\n        const uid = element.dataset.wtdlUid;\n        const translatedText = this.#translatedTexts[uid];\n        element.innerHTML = translatedText;\n        element.dataset.wtdlTranslated = \"true\";\n      }\n    }\n\n    const visibleElements = await collectVisibleElements();\n    if (visibleElements.length === 0) {\n      this.#cancelTranslation();\n      return;\n    }\n    this.#startTranslation();\n\n    const texts = visibleElements.map((element) => element.text);\n    const response = await browser.runtime.sendMessage({\n      method: \"translate\",\n      texts,\n      sourceLanguage: request.sourceLanguage,\n      targetLanguage: request.targetLanguage,\n    });\n\n    if (response && response.result) {\n      const result = response.result.result;\n      if (result && result.texts) {\n        this.#sourceLanguage = result.lang;\n        this.#targetLanguage = request.targetLanguage;\n\n        const translatedTexts = result.texts;\n        if (translatedTexts.length === visibleElements.length) {\n          for (let i = 0; i < visibleElements.length; i++) {\n            const element = visibleElements[i].element;\n            const text = translatedTexts[i].text;\n            const uid = element.dataset.wtdlUid || this.#uid++;\n\n            if (element.dataset.wtdlOriginal !== \"true\") {\n              this.#originalTexts[uid] = element.innerHTML;\n            }\n            this.#translatedTexts[uid] = text;\n            element.innerHTML = text;\n\n            element.dataset.wtdlUid = `${uid}`;\n            element.dataset.wtdlOriginal = \"true\";\n            element.dataset.wtdlTranslated = \"true\";\n          }\n\n          this.#saveState();\n        }\n      } else if (response.result.error) {\n        const message = (() => {\n          if (response.result.error.code === 1045601) {\n            return browser.i18n.getMessage(\n              \"error_message_quota_has_been_reached\"\n            );\n          } else {\n            return (\n              response.result.error.message ||\n              browser.i18n.getMessage(\"error_message_generic_error\")\n            );\n          }\n        })();\n        this.#abortTranslation(message);\n        return;\n      }\n    }\n\n    this.#finishTranslation();\n  }\n\n  #startTranslation() {\n    this.#toastProgress.setAttribute(\"show\", true);\n\n    this.#isProcessing = true;\n    this.#isShowingOriginal = false;\n\n    browser.runtime.sendMessage({\n      method: \"startTranslation\",\n    });\n  }\n\n  #cancelTranslation() {\n    this.#isShowingOriginal = false;\n\n    browser.runtime.sendMessage({\n      method: \"cancelTranslation\",\n      result: {\n        sourceLanguage: this.#sourceLanguage,\n        targetLanguage: this.#targetLanguage,\n      },\n    });\n  }\n\n  #abortTranslation(errorMessage) {\n    this.#isProcessing = false;\n    this.#isShowingOriginal = false;\n\n    this.#toastProgress.setAttribute(\"show\", false);\n    this.#toastError.setAttribute(\"show\", errorMessage);\n\n    browser.runtime.sendMessage({\n      method: \"abortTranslation\",\n      message: errorMessage,\n    });\n  }\n\n  #finishTranslation() {\n    this.#isProcessing = false;\n    this.#toastProgress.setAttribute(\"show\", false);\n\n    browser.runtime.sendMessage({\n      method: \"finishTranslation\",\n      result: {\n        sourceLanguage: this.#sourceLanguage,\n        targetLanguage: this.#targetLanguage,\n      },\n    });\n  }\n}\n\nasync function collectVisibleElements() {\n  const blockElements = [];\n\n  const children = document.body.children;\n  splitElements(children, blockElements);\n\n  const visibleElements = [];\n  for (const element of blockElements) {\n    const visible = isVisible(element);\n    if (\n      visible &&\n      (element.dataset.wtdlUid === undefined ||\n        element.dataset.wtdlTranslated === \"false\")\n    ) {\n      visibleElements.push({ element, text: element.innerHTML });\n    }\n  }\n\n  return visibleElements;\n}\n\nfunction splitElements(elements, storage) {\n  for (const element of elements) {\n    if (\n      element.nodeName !== \"STYLE\" &&\n      element.nodeName !== \"META\" &&\n      element.nodeName !== \"LINK\" &&\n      element.nodeName !== \"SCRIPT\" &&\n      element.nodeName !== \"svg\" &&\n      (hasTextNode(element) || hasInlineElement(element)) &&\n      element.clientTop < window.innerHeight\n    ) {\n      storage.push(element);\n    } else {\n      const children = element.children;\n      if (!children || children.length === 0) {\n        continue;\n      }\n      splitElements(element.children, storage);\n    }\n  }\n}\n\nnew App();\n"],"names":["isVisible","element","rect","getBoundingClientRect","top","window","innerHeight","left","innerWidth","hasTextNode","childNodes","length","nodeType","Node","TEXT_NODE","nodeValue","trim","hasInlineElement","children","child","display","getComputedStyle","this","popover","document","getElementById","remove","tooltip","navigator","maxTouchPoints","msMaxTouchPoints","id","global","dataset","wtdlOriginalTexts","JSON","parse","error","body","insertAdjacentHTML","stringify","browser","runtime","onMessage","addListener","async","request","sender","sendResponse","method","fn","context","result","apply","arguments","undefined","once","callback","isScrolling","refresh","addEventListener","event","clearTimeout","setTimeout","passive","capture","scrollDidStop","sourceLanguage","targetLanguage","isProcessing","Object","keys","isShowingOriginal","elements","querySelectorAll","uid","wtdlUid","originalText","innerHTML","wtdlTranslated","selectionRect","getSelection","getRangeAt","x","scrollX","y","bottom","scrollY","position","setAttribute","texts","text","map","t","join","message","i18n","getMessage","selection","toString","preventDefault","selectionText","rangeCount","textRange","cloneRange","collapse","anchorOffset","focusOffset","right","stopPropagation","sendMessage","target","closest","toast","onClick","removeEventListener","detail","storage","local","set","selectedSourceLanguage","selectedTargetLanguage","getPosition","translatedElements","translatedText","visibleElements","blockElements","splitElements","push","collectVisibleElements","response","lang","translatedTexts","i","wtdlOriginal","code","errorMessage","nodeName","clientTop","constructor"],"sourceRoot":""}