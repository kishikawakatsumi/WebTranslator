{"version":3,"file":"content.js","mappings":"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","sources":["webpack://webtranslator/./src/content/utils.js","webpack://webtranslator/./src/content/content.js"],"sourcesContent":["\"use strict\";\n\nexport function isVisible(element) {\n  const rect = element.getBoundingClientRect();\n  return rect.top <= window.innerHeight && rect.left <= window.innerWidth;\n}\n\nexport function isHidden(element) {\n  return (\n    getComputedStyle(element).display === \"none\" ||\n    !element.textContent ||\n    element.textContent.trim() === \"\"\n  );\n}\n\nexport function hasTextNode(element) {\n  const childNodes = element.childNodes;\n  if (childNodes.length === 0) {\n    return false;\n  }\n  for (const child of childNodes) {\n    if (\n      child.nodeType === Node.TEXT_NODE &&\n      child.nodeValue &&\n      child.nodeValue.trim() !== \"\"\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function hasNoBlockElement(element) {\n  const children = element.children;\n  if (!children || children.length === 0) {\n    return false;\n  }\n  return Array.from(children).every((child) => {\n    const display = getComputedStyle(child).display;\n    return (\n      child.textContent &&\n      child.textContent.trim() !== \"\" &&\n      child.tagName !== \"BASE\" &&\n      child.tagName !== \"LINK\" &&\n      child.tagName !== \"NOSCRIPT\" &&\n      child.tagName !== \"SCRIPT\" &&\n      child.tagName !== \"STYLE\" &&\n      child.tagName !== \"TEMPLATE\" &&\n      child.tagName !== \"TITLE\" &&\n      child.tagName !== \"AUDIO\" &&\n      child.tagName !== \"CANVAS\" &&\n      child.tagName !== \"IMG\" &&\n      child.tagName !== \"MATH\" &&\n      child.tagName !== \"OBJECT\" &&\n      child.tagName !== \"PICTURE\" &&\n      child.tagName !== \"SVG\" &&\n      child.tagName !== \"VIDEO\" &&\n      display !== \"block\" &&\n      display !== \"flex\" &&\n      display !== \"table-row\" &&\n      display !== \"table-cell\" &&\n      display !== \"none\"\n    );\n  });\n}\n\nexport function scrollDidStop(callback, refresh = 200) {\n  let isScrolling;\n  window.addEventListener(\n    \"scroll\",\n    function (event) {\n      window.clearTimeout(isScrolling);\n      isScrolling = setTimeout(callback, refresh);\n    },\n    {\n      once: false,\n      passive: true,\n      capture: true,\n    }\n  );\n}\n\nexport function once(fn, context) {\n  let result;\n  return function () {\n    if (fn) {\n      result = fn.apply(context || this, arguments);\n      fn = undefined;\n    }\n    return result;\n  };\n}\n\nexport function escapeHTML(text) {\n  const div = document.createElement(\"div\");\n  div.textContent = text;\n  return div.innerHTML;\n}\n\nexport function isTouchDevice() {\n  return (\n    \"ontouchstart\" in window ||\n    navigator.maxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0\n  );\n}\n","\"use strict\";\n\nimport {\n  isVisible,\n  isHidden,\n  hasTextNode,\n  hasNoBlockElement,\n  once,\n  scrollDidStop,\n  isTouchDevice,\n} from \"./utils\";\n\nclass App {\n  #uid = 1;\n  #sourceLanguage = undefined;\n  #targetLanguage = undefined;\n  #originalTexts = {};\n  #translatedTexts = {};\n\n  #toastProgress = undefined;\n  #toastError = undefined;\n\n  #isProcessing = false;\n  #shouldProcessAfterScrolling = false;\n  #isShowingOriginal = false;\n\n  constructor() {\n    this.#init();\n  }\n\n  #init() {\n    this.#restoreState();\n\n    const popover = this.#getPopover();\n    if (popover) {\n      popover.remove();\n    }\n    const tooltip = document.getElementById(\"translate-button\");\n    if (tooltip) {\n      tooltip.remove();\n    }\n\n    this.#toastProgress = this.#createToastProgress();\n    this.#toastError = this.#createToastError();\n\n    this.#setupListeners();\n    if (isTouchDevice()) {\n      this.#observeTextSelection();\n    }\n  }\n\n  #restoreState() {\n    const id = \"__wtdl-global-data\";\n    const global = document.getElementById(id);\n    if (global) {\n      if (global.dataset.wtdlOriginalTexts) {\n        try {\n          this.#originalTexts = JSON.parse(global.dataset.wtdlOriginalTexts);\n        } catch (error) {}\n      }\n      return;\n    }\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<div id=\"${id}\" style=\"display: none;\"></div>`\n    );\n  }\n\n  #saveState() {\n    const global = document.getElementById(\"__wtdl-global-data\");\n    if (global) {\n      global.dataset.wtdlOriginalTexts = JSON.stringify(this.#originalTexts);\n    }\n  }\n\n  #setupListeners() {\n    browser.runtime.onMessage.addListener(\n      async (request, sender, sendResponse) => {\n        if (!request) {\n          return;\n        }\n        switch (request.method) {\n          case \"translate\": {\n            this.#shouldProcessAfterScrolling = true;\n\n            await this.#translatePage(request);\n\n            once(\n              scrollDidStop(async () => {\n                if (this.#shouldProcessAfterScrolling) {\n                  await this.#translatePage({\n                    sourceLanguage: this.#sourceLanguage,\n                    targetLanguage: this.#targetLanguage,\n                  });\n                }\n              }, 500)\n            )();\n\n            sendResponse();\n            break;\n          }\n          case \"getContentState\": {\n            if (this.#isProcessing) {\n              sendResponse({ result: { isProcessing: this.#isProcessing } });\n            } else if (Object.keys(this.#originalTexts).length > 0) {\n              sendResponse({\n                result: {\n                  sourceLanguage: this.#sourceLanguage,\n                  targetLanguage: this.#targetLanguage,\n                  isShowingOriginal: this.#isShowingOriginal,\n                },\n              });\n            } else {\n              sendResponse(undefined);\n            }\n            break;\n          }\n          case \"showOriginal\": {\n            this.#shouldProcessAfterScrolling = false;\n            this.#isShowingOriginal = true;\n\n            const elements = document.querySelectorAll(\n              '[data-wtdl-translated=\"true\"]'\n            );\n            for (const element of elements) {\n              const uid = element.dataset.wtdlUid;\n              const originalText = this.#originalTexts[uid];\n              if (originalText === undefined) {\n                continue;\n              }\n              element.innerHTML = originalText;\n              element.dataset.wtdlTranslated = \"false\";\n            }\n            sendResponse();\n            break;\n          }\n          case \"startTranslateSelection\": {\n            const selection = window.getSelection();\n\n            let position = this.#getExistingPopoverPosition();\n            if (!position && selection.rangeCount) {\n              const textRange = selection.getRangeAt(0);\n              const selectionRect = textRange.getBoundingClientRect();\n\n              const x = selectionRect.left + window.scrollX;\n              const y = selectionRect.bottom + window.scrollY + 30;\n              position = { x, y };\n            }\n\n            const popover = this.#createPopover(position);\n            popover.setAttribute(\"loading\", true);\n\n            sendResponse();\n            break;\n          }\n          case \"finishTranslateSelection\": {\n            const result = request.result;\n            const popover = this.#getPopover();\n            if (popover) {\n              if (result.result && result.result.texts) {\n                const text = result.result.texts.map((t) => t.text).join(\"\\n\");\n                popover.setAttribute(\"result\", `${text}`);\n                popover.setAttribute(\"lang\", `${request.targetLanguage || \"\"}`);\n              } else {\n                if (result.error) {\n                  const message = browser.i18n.getMessage(\n                    \"error_message_generic_error\"\n                  );\n                  popover.setAttribute(\"error\", message);\n                } else {\n                  const message = browser.i18n.getMessage(\n                    \"error_message_generic_error\"\n                  );\n                  popover.setAttribute(\"error\", message);\n                }\n              }\n              popover.setAttribute(\"loading\", false);\n            }\n            sendResponse();\n            break;\n          }\n          case \"getSelection\": {\n            const selection = window.getSelection();\n            sendResponse({\n              result: selection ? selection.toString() : undefined,\n            });\n            break;\n          }\n          default: {\n            sendResponse();\n            break;\n          }\n        }\n      }\n    );\n\n    browser.storage.onChanged.addListener((changes, areaName) => {\n      if (areaName === \"local\" && \"selectedTargetLanguage\" in changes) {\n        const popover = this.#getPopover();\n        if (popover) {\n          popover.setAttribute(\"lang\", changes.selectedTargetLanguage.newValue);\n          browser.runtime.sendMessage({\n            method: \"translateSelection\",\n            selectionText: undefined,\n          });\n        }\n      }\n    });\n  }\n\n  #observeTextSelection() {\n    document.addEventListener(\"pointerup\", async (event) => {\n      event.preventDefault();\n\n      const selection = window.getSelection();\n      if (!selection.rangeCount) {\n        return;\n      }\n      let textRange = selection.getRangeAt(0).cloneRange();\n\n      const selectionText = selection ? selection.toString().trim() : \"\";\n      if (!selectionText && !selection.rangeCount) {\n        this.#removeTooltip();\n        return;\n      }\n\n      setTimeout(() => {\n        textRange = selection.rangeCount\n          ? selection.getRangeAt(0).cloneRange()\n          : textRange;\n        textRange.collapse(selection.anchorOffset > selection.focusOffset);\n        const selectionRect = textRange.getBoundingClientRect();\n\n        const x = selectionRect.right + window.scrollX - 20;\n        const y = selectionRect.bottom + window.scrollY + 40;\n\n        {\n          const selection = window.getSelection();\n          if (!selection || !selection.toString().trim()) {\n            this.#removeTooltip();\n            return;\n          }\n        }\n\n        browser.storage.local.get([\"settingsShowsIconForReading\"], (result) => {\n          const showsIconForReading =\n            result.settingsShowsIconForReading === undefined ||\n            result.settingsShowsIconForReading;\n          if (showsIconForReading) {\n            const tooltip = this.#createTooltip({ x, y });\n            tooltip.addEventListener(\"tooltipClick\", (event) => {\n              event.preventDefault();\n              event.stopPropagation();\n\n              if (selectionText) {\n                browser.runtime.sendMessage({\n                  method: \"translateSelection\",\n                  selectionText,\n                });\n              }\n              tooltip.remove();\n\n              return false;\n            });\n          }\n        });\n      }, 100);\n    });\n  }\n\n  #createTooltip(position) {\n    const id = \"translate-button\";\n    {\n      const tooltip = document.getElementById(id);\n      if (tooltip) {\n        tooltip.remove();\n      }\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<translate-button id=\"${id}\"></translate-button>`\n    );\n    const tooltip = document.getElementById(id);\n    tooltip.setAttribute(\"position\", JSON.stringify(position));\n\n    document.addEventListener(\n      \"touchstart\",\n      (event) => {\n        if (event.target.closest(id)) {\n          return;\n        }\n        tooltip.remove();\n      },\n      { once: true }\n    );\n\n    return tooltip;\n  }\n\n  #removeTooltip() {\n    const id = \"translate-button\";\n    const tooltip = document.getElementById(id);\n    if (tooltip) {\n      tooltip.remove();\n    }\n  }\n\n  #createToastProgress() {\n    const id = \"toast-progress\";\n    const toast = document.getElementById(id);\n    if (toast) {\n      toast.remove();\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<toast-progress id=\"${id}\"></toast-progress>`\n    );\n    return document.getElementById(id);\n  }\n\n  #createToastError() {\n    const id = \"toast-error\";\n    const toast = document.getElementById(id);\n    if (toast) {\n      toast.remove();\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<toast-error id=\"${id}\"></toast-error>`\n    );\n    return document.getElementById(id);\n  }\n\n  #createPopover(position) {\n    const id = \"translate-popover\";\n    {\n      const popover = document.getElementById(id);\n      if (popover) {\n        popover.remove();\n      }\n    }\n\n    document.body.insertAdjacentHTML(\n      \"beforeend\",\n      `<translate-popover id=\"${id}\"></translate-popover>`\n    );\n    const popover = document.getElementById(id);\n    popover.setAttribute(\"position\", JSON.stringify(position));\n    browser.storage.local.get([\"selectedTargetLanguage\"], (result) => {\n      if (result && result.selectedTargetLanguage) {\n        popover.setAttribute(\"lang\", result.selectedTargetLanguage);\n      }\n    });\n\n    const onClick = (event) => {\n      if (event.target.closest(id)) {\n        return;\n      }\n      popover.remove();\n      document.removeEventListener(\"click\", onClick);\n    };\n\n    document.addEventListener(\"click\", onClick);\n    popover.addEventListener(\"close\", async () => {\n      popover.remove();\n      document.removeEventListener(\"click\", onClick);\n    });\n    popover.addEventListener(\"change\", async (event) => {\n      await browser.storage.local.set({\n        selectedSourceLanguage: undefined,\n        selectedTargetLanguage: event.detail.selectedTargetLanguage,\n      });\n    });\n\n    return popover;\n  }\n\n  #getPopover() {\n    const id = \"translate-popover\";\n    return document.getElementById(id);\n  }\n\n  #getExistingPopoverPosition() {\n    const popover = this.#getPopover();\n    if (popover) {\n      const draggable = popover.shadowRoot.querySelector(\"#draggable\");\n      if (draggable) {\n        return {\n          x: draggable.offsetLeft,\n          y: draggable.offsetTop,\n        };\n      }\n    }\n    return undefined;\n  }\n\n  async #translatePage(request) {\n    const translatedElements = document.querySelectorAll(\n      '[data-wtdl-translated=\"false\"]'\n    );\n    if (this.#targetLanguage === request.targetLanguage) {\n      // Restore translated texts\n      for (const element of translatedElements) {\n        const uid = element.dataset.wtdlUid;\n        const translatedText = this.#translatedTexts[uid];\n        element.innerHTML = translatedText;\n        element.dataset.wtdlTranslated = \"true\";\n      }\n    }\n\n    const visibleElements = await collectVisibleElements();\n    if (visibleElements.length === 0) {\n      this.#cancelTranslation();\n      return;\n    }\n    this.#startTranslation();\n\n    const texts = visibleElements.map((element) => element.text);\n    const response = await browser.runtime.sendMessage({\n      method: \"translate\",\n      texts,\n      sourceLanguage: request.sourceLanguage,\n      targetLanguage: request.targetLanguage,\n    });\n\n    const handleError = (error) => {\n      const message =\n        error || browser.i18n.getMessage(\"error_message_generic_error\");\n      this.#abortTranslation(message);\n    };\n\n    if (!response || !response.result) {\n      handleError();\n      return;\n    }\n    const result = response.result.result;\n    if (result && result.texts) {\n      this.#sourceLanguage = result.lang;\n      this.#targetLanguage = request.targetLanguage;\n\n      const translatedTexts = result.texts;\n      if (translatedTexts.length === visibleElements.length) {\n        for (let i = 0; i < visibleElements.length; i++) {\n          const element = visibleElements[i].element;\n          const text = translatedTexts[i].text;\n          const uid = element.dataset.wtdlUid || this.#uid++;\n\n          if (element.dataset.wtdlOriginal !== \"true\") {\n            this.#originalTexts[uid] = element.innerHTML;\n          }\n          this.#translatedTexts[uid] = text;\n          element.innerHTML = text;\n\n          element.dataset.wtdlUid = `${uid}`;\n          element.dataset.wtdlOriginal = \"true\";\n          element.dataset.wtdlTranslated = \"true\";\n        }\n\n        this.#saveState();\n      }\n    } else if (response.result.error) {\n      const message =\n        response.result.error.code === 1045601\n          ? browser.i18n.getMessage(\"error_message_quota_has_been_reached\")\n          : response.result.error.message;\n      handleError(message);\n      return;\n    } else {\n      handleError();\n      return;\n    }\n\n    this.#finishTranslation();\n  }\n\n  #startTranslation() {\n    this.#toastProgress.setAttribute(\"show\", true);\n\n    this.#isProcessing = true;\n    this.#isShowingOriginal = false;\n\n    browser.runtime.sendMessage({\n      method: \"startTranslation\",\n    });\n  }\n\n  #cancelTranslation() {\n    this.#isShowingOriginal = false;\n\n    browser.runtime.sendMessage({\n      method: \"cancelTranslation\",\n      result: {\n        sourceLanguage: this.#sourceLanguage,\n        targetLanguage: this.#targetLanguage,\n      },\n    });\n  }\n\n  #abortTranslation(errorMessage) {\n    this.#isProcessing = false;\n    this.#isShowingOriginal = false;\n\n    this.#toastProgress.setAttribute(\"show\", false);\n    this.#toastError.setAttribute(\"show\", errorMessage);\n\n    browser.runtime.sendMessage({\n      method: \"abortTranslation\",\n      message: errorMessage,\n    });\n  }\n\n  #finishTranslation() {\n    this.#isProcessing = false;\n    this.#toastProgress.setAttribute(\"show\", false);\n\n    browser.runtime.sendMessage({\n      method: \"finishTranslation\",\n      result: {\n        sourceLanguage: this.#sourceLanguage,\n        targetLanguage: this.#targetLanguage,\n      },\n    });\n  }\n}\n\nasync function collectVisibleElements() {\n  const blockElements = [];\n\n  const children = document.body.children;\n  splitElements(children, blockElements);\n\n  const visibleElements = [];\n  for (const element of blockElements) {\n    const visible = isVisible(element);\n    if (\n      visible &&\n      (element.dataset.wtdlUid === undefined ||\n        element.dataset.wtdlTranslated === \"false\")\n    ) {\n      visibleElements.push({ element, text: element.innerHTML });\n    }\n  }\n\n  return visibleElements;\n}\n\nfunction splitElements(elements, storage) {\n  for (const element of elements) {\n    if (isHidden(element)) {\n      continue;\n    }\n    if (element.nodeName === \"NOSCRIPT\" || element.nodeName === \"svg\") {\n      continue;\n    }\n\n    const children = element.children;\n    const childNodes = Array.from(element.childNodes).filter((node) => {\n      if (node.nodeType === Node.COMMENT_NODE) {\n        return false;\n      }\n      if (node.nodeType === Node.TEXT_NODE) {\n        return node.nodeValue && node.nodeValue.trim();\n      }\n      return true;\n    });\n\n    if (hasTextNode(element)) {\n      if (childNodes.length === 1 && children.length > 0) {\n        splitElements(children, storage);\n      } else {\n        storage.push(element);\n      }\n      continue;\n    }\n    if (hasNoBlockElement(element)) {\n      if (childNodes.length === 1 && children.length > 0) {\n        splitElements(children, storage);\n      } else {\n        storage.push(element);\n      }\n      continue;\n    }\n\n    if (children.length === 0) {\n      continue;\n    }\n    splitElements(children, storage);\n  }\n}\n\nnew App();\n"],"names":["isVisible","element","rect","getBoundingClientRect","top","window","innerHeight","left","innerWidth","isHidden","getComputedStyle","display","textContent","trim","hasTextNode","childNodes","length","child","nodeType","Node","TEXT_NODE","nodeValue","hasNoBlockElement","children","Array","from","every","tagName","splitElements","elements","storage","nodeName","filter","node","COMMENT_NODE","push","undefined","constructor","this","popover","remove","tooltip","document","getElementById","navigator","maxTouchPoints","msMaxTouchPoints","id","global","dataset","wtdlOriginalTexts","JSON","parse","error","body","insertAdjacentHTML","stringify","browser","runtime","onMessage","addListener","async","request","sender","sendResponse","method","fn","context","result","apply","arguments","once","callback","isScrolling","refresh","addEventListener","event","clearTimeout","setTimeout","passive","capture","scrollDidStop","sourceLanguage","targetLanguage","isProcessing","Object","keys","isShowingOriginal","querySelectorAll","uid","wtdlUid","originalText","innerHTML","wtdlTranslated","selection","getSelection","position","rangeCount","selectionRect","getRangeAt","x","scrollX","y","bottom","scrollY","setAttribute","texts","text","map","t","join","message","i18n","getMessage","toString","onChanged","changes","areaName","selectedTargetLanguage","newValue","sendMessage","selectionText","preventDefault","textRange","cloneRange","collapse","anchorOffset","focusOffset","right","local","get","settingsShowsIconForReading","stopPropagation","target","closest","toast","onClick","removeEventListener","set","selectedSourceLanguage","detail","draggable","shadowRoot","querySelector","offsetLeft","offsetTop","translatedElements","translatedText","visibleElements","blockElements","collectVisibleElements","response","handleError","lang","translatedTexts","i","wtdlOriginal","code","errorMessage"],"sourceRoot":""}