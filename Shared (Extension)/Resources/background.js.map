{"version":3,"file":"background.js","mappings":"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","sources":["webpack://webtranslator/./src/background/translator.js","webpack://webtranslator/./src/background/background.js"],"sourcesContent":["\"use strict\";\n\nexport class Translator {\n  #id = 1e4 * Math.round(1e4 * Math.random());\n\n  #sourceLanguage;\n  #targetLanguage;\n\n  constructor() {}\n\n  setSourceLanguage(sourceLanguage) {\n    this.#sourceLanguage = sourceLanguage;\n  }\n\n  setTargetLanguage(targetLanguage) {\n    this.#targetLanguage = targetLanguage;\n  }\n\n  async translate(texts, isHtmlEnabled = true) {\n    this.#id++;\n\n    let n = 1;\n    for (const text of texts) {\n      for (let i = 0; i < text.length; i++) {\n        if (text[i] === \"i\") {\n          n++;\n        }\n      }\n    }\n\n    let timestamp = Date.now();\n    timestamp = timestamp - (timestamp % n) + n;\n\n    let body = JSON.stringify({\n      jsonrpc: \"2.0\",\n      method: \"LMT_handle_texts\",\n      params: {\n        texts: texts.map((text) => {\n          return {\n            text,\n          };\n        }),\n        html: isHtmlEnabled ? \"enabled\" : undefined,\n        splitting: isHtmlEnabled ? undefined : \"newlines\",\n        lang: {\n          target_lang: this.#targetLanguage,\n          source_lang_user_selected: this.#sourceLanguage || \"auto\",\n        },\n        timestamp,\n      },\n      id: this.#id,\n    });\n    body = body.replace(\n      `\"method\":\"`,\n      `${\n        (this.#id + 3) % 13 === 0 || (this.#id + 5) % 29 === 0\n          ? `\"method\" : \"`\n          : `\"method\": \"`\n      }`\n    );\n\n    const request = {\n      method: isHtmlEnabled ? \"translate\" : \"translateSelection\",\n      payload: {\n        headers: {\n          Accept: \"*/*\",\n          \"x-app-os-name\": \"iOS\",\n          \"Accept-Encoding\": \"gzip, deflate, br\",\n          \"Content-Type\": \"application/json\",\n          Referer: \"https://www.deepl.com/\",\n        },\n        method: \"POST\",\n        body: body,\n      },\n    };\n\n    return new Promise((resolve) => {\n      browser.runtime.sendNativeMessage(\n        \"application.id\",\n        request,\n        (response) => {\n          if (response && response.result) {\n            resolve(response.result);\n          } else {\n            resolve(undefined);\n          }\n        }\n      );\n    });\n  }\n}\n","\"use strict\";\n\nimport { Translator } from \"./translator\";\n\nclass App {\n  #selectionText = undefined;\n\n  constructor() {\n    this.#init();\n  }\n\n  #init() {\n    this.#setupListeners();\n    this.#setupContextMenu();\n  }\n\n  #setupListeners() {\n    browser.runtime.onMessage.addListener(\n      async (request, sender, sendResponse) => {\n        if (!request) {\n          return;\n        }\n        switch (request.method) {\n          case \"translate\": {\n            const texts = request.texts;\n            const result = await translate(\n              texts,\n              request.sourceLanguage,\n              request.targetLanguage\n            );\n\n            sendResponse({ result });\n            break;\n          }\n          case \"translateSelection\": {\n            const selectionText = this.#selectionText;\n            if (request.selectionText && request.selectionText.trim()) {\n              // From popup toolbar (Mobile only)\n              this.#translateSelection(request.selectionText);\n            } else if (selectionText && selectionText.trim()) {\n              // Language changed in popover window\n              this.#translateSelection(selectionText);\n            }\n\n            sendResponse();\n            break;\n          }\n          default: {\n            sendResponse();\n            break;\n          }\n        }\n\n        return true;\n      }\n    );\n  }\n\n  #setupContextMenu() {\n    if (browser.menus.create) {\n      browser.menus.create({\n        id: \"translateSelection\",\n        title: browser.i18n.getMessage(\"context_menus_translate_section\"),\n        contexts: [\"editable\", \"link\", \"page\", \"selection\"],\n      });\n\n      browser.menus.onClicked.addListener(async (info, tab) => {\n        switch (info.menuItemId) {\n          case \"translateSelection\":\n            const selectionText = info.selectionText;\n            if (selectionText && selectionText.trim()) {\n              this.#translateSelection(selectionText);\n            }\n        }\n      });\n    }\n  }\n\n  async #translateSelection(selectionText) {\n    this.#selectionText = selectionText;\n    const targetLanguage = await getTargetLanguage();\n\n    browser.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      browser.tabs.sendMessage(tabs[0].id, {\n        method: \"startTranslateSelection\",\n        selectionText,\n      });\n    });\n\n    const result = await translate(\n      [selectionText],\n      undefined,\n      targetLanguage,\n      false\n    );\n\n    browser.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n      browser.tabs.sendMessage(tabs[0].id, {\n        method: \"finishTranslateSelection\",\n        result,\n        targetLanguage,\n      });\n    });\n    browser.runtime.sendMessage({\n      method: \"finishTranslateSelection\",\n    });\n  }\n}\n\nasync function translate(\n  texts,\n  sourceLanguage,\n  targetLanguage,\n  isHtmlEnabled = true\n) {\n  const translator = new Translator();\n  translator.setSourceLanguage(sourceLanguage);\n  translator.setTargetLanguage(targetLanguage);\n\n  const result = await translator.translate(texts, isHtmlEnabled);\n  return result;\n}\n\nasync function getTargetLanguage() {\n  return new Promise((resolve, reject) => {\n    browser.storage.local.get([\"selectedTargetLanguage\"], (result) => {\n      if (result && result.selectedTargetLanguage) {\n        resolve(result.selectedTargetLanguage);\n      } else {\n        const locale = browser.i18n\n          .getUILanguage()\n          .split(\"-\")\n          .shift()\n          .toUpperCase();\n        resolve(locale);\n      }\n    });\n  });\n}\n\nnew App();\n"],"names":["Translator","constructor","Math","round","random","setSourceLanguage","sourceLanguage","this","setTargetLanguage","targetLanguage","async","texts","isHtmlEnabled","n","text","i","length","timestamp","Date","now","body","JSON","stringify","jsonrpc","method","params","map","html","undefined","splitting","lang","target_lang","source_lang_user_selected","id","replace","request","payload","headers","Accept","Referer","Promise","resolve","browser","runtime","sendNativeMessage","response","result","onMessage","addListener","sender","sendResponse","translate","selectionText","trim","menus","create","title","i18n","getMessage","contexts","onClicked","info","tab","menuItemId","reject","storage","local","get","selectedTargetLanguage","locale","getUILanguage","split","shift","toUpperCase","getTargetLanguage","tabs","query","active","currentWindow","sendMessage","translator"],"sourceRoot":""}